// app/root related styles

@import "../index";

.ls-grid-row {
  .ls-flex();

  .ls-grid-row-container {
    .ls-flex-combo();
  }
  &.is-flex {
    .ls-flex-auto();
    width: initial;
  }
}

.ls-grid-column {
  .ls-flex-column();

  .ls-grid-row-container {
    .ls-flex-combo();
  }
  &.is-flex {
    .ls-flex-auto();
  }
}


// generate percentage-type of width/height for grid
.generate-grid-spans(@prefix: "", @length, @index: 0) when (@index <= @length) {
  .ls-@{prefix}width-@{index} {
    width: 0% + (100 / @length * @index);
  }
  .ls-@{prefix}min-width-@{index} {
    min-width: 0% + (100 / @length * @index);
  }
  .ls-@{prefix}max-width-@{index} {
    max-width: 0% + (100 / @length * @index);
  }
  .ls-@{prefix}height-@{index} {
    height: 0% + (100 / @length * @index);
  }
  .ls-@{prefix}min-height-@{index} {
    min-height: 0% + (100 / @length * @index);
  }
  .ls-@{prefix}max-height-@{index} {
    max-height: 0% + (100 / @length * @index);
  }

  .generate-grid-spans(@prefix, @length, @index + 1);
}

// for all situations used
.generate-grid-spans(grid-, @grid-length);
.generate-grid-spans("", 100);

// big screen
@media screen and (min-width:1200px) {
  .generate-grid-spans(grid-big-, @grid-length);
  .generate-grid-spans(big-, 100);
}
// middle screen
@media screen and (min-width: 768px) and (max-width:1199px) {
  .generate-grid-spans(grid-middle-, @grid-length);
  .generate-grid-spans(middle-, 100);
}
// small screen
@media screen and (min-width: 480px) and (max-width:767px) {
  .generate-grid-spans(grid-small-, @grid-length);
  .generate-grid-spans(small-, 100);
}
// smaller screen
@media screen and (max-width: 479px) {
  .generate-grid-spans(grid-smaller, @grid-length);
  .generate-grid-spans(smaller-, 100);
}
